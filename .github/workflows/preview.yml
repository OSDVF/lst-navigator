# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: preview
'on':
  workflow_run:
    workflows: ["build"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:
jobs:
  preview:
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      actions: read
      deployments: write
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: preview

      - run: mkdir -p .output/public

      - name: Download distribution artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
          name: dist
          path: .output/public

      - name: Inject source maps
        run: node inject-sourcemaps.mjs
          
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: hosting
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LST_NAVIGATOR }}'
          projectId: lst-navigator
          channelId: preview

      - name: Set deployment status
        uses: avakar/set-deployment-status@v1
        if: success()
        with:
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          environment_url: ${{ steps.hosting.outputs.details_url }}
          state: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set deployment fail
        uses: avakar/set-deployment-status@v1
        if: failure()
        with:
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          environment_url: ${{ steps.hosting.outputs.details_url }}
          state: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: URL to domain
        id: domain
        run: INPUT=${{ steps.hosting.outputs.details_url }}; echo "DOMAIN=${INPUT:8}">>${GITHUB_OUTPUT}

      - name: Update Firebase Authorized Domains
        uses: wavezync/firebase-authorized-domains@v1.0.0
        with:
          service_account_key_json: ${{ secrets.DEPLOYMENT_ACCOUNT }}
          domain: ${{ steps.domain.outputs.DOMAIN }}
          action: add 

      - uses: 'google-github-actions/auth@v2'
        name: Get Cloud Auth Token
        id: auth
        with: 
          token_format: 'access_token'
          project_id: ${{ secrets.FIREBASE_PROJECT }}
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_LST_NAVIGATOR }}

      - name: Update Recaptcha Authorized Domains
        uses: indiesdev/curl@v1.1
        with: 
          url: "https://recaptchaenterprise.googleapis.com/v1/projects/${{ secrets.FIREBASE_PROJECT }}/keys/${{ secrets.RECAPTCHA_SITE_KEY }}"
          params: '{ "updateMask": "webSettings.allowedDomains"}'
          method: PATCH
          accept: 200, 204, 201, 400, 401
          bearer-token: "${{ steps.auth.outputs.access_token }}"
          headers: '{ "content-type": "application/json" }'
          log-response: true
          body: |
            {
              "webSettings" : {
                "allowedDomains": [
                  ${{ secrets.RECAPTCHA_DOMAINS }},
                  "${{ steps.domain.outputs.DOMAIN }}",
                ]
              }
            }
